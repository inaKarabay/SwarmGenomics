_--------------------------------------------------------------
direct fastq download
usr/bin/fastq-dump SRR11430608
	-> file SRR11430608.fastq
	-> downloads fastq file directly (and not sra)
	-> did not finish
_--------------------------------------------------------------
normal fastq-dump
fastq-dump --gzip --split-files [SRA file]
_--------------------------------------------------------------
convert sra to bam
sam-dump SRR11430608.1 | samtools view -bS -> SRR11430608.1.bam
	-> did not work
_--------------------------------------------------------------
convert sra to sam
sam-dump --output-file SRR11430608.1.sam  SRR11430608.1
	-> did not work
_--------------------------------------------------------------
zip files
gzip FILENAME
_--------------------------------------------------------------
trimmomatic
sudo trimmomatic PE SRR11430608.1_1.fastq.gz SRR11430608.1_2.fastq.gz SRR11430608.1_1.trim.fastq.gz SRR11430608.1_1un.trim.fastq.gz SRR11430608.1_2.trim.fastq.gz SRR11430608.1_2un.trim.fastq.gz SLIDINGWINDOW:4:20 MINLEN:25 ILLUMINACLIP:TruSeq3-SE:2:30:10
	did not work because clip not found -> use jar
_--------------------------------------------------------------
bwa mem -t 18 $working_dir/$3/bwa_index/index $working_dir$3/1trim.fastq.gz SRR11430608.1_2.trim.fastq.gz > $working_dir$3/bwa.sam #2> $working_dir$3/bwa.log
#conversion to bam file
#-m when a lot of memory available -> needs to specify
samtools sort -@ 18  -o $working_dir$3/bwa.sorted.bam $working_dir$3/bwa.sam

not needed (use samtools sort directly)
	samtools view SRR11430608.1_bwa.sam > SRR11430608.1_bwa.bam
_--------------------------------------------------------------
samtools view instead of call

 view calls SNPs
bcftools view -bvcg SRR11430608.1_raw.bcf > variants.raw.bcf
makes VCF
bcftools view variants.raw.bcf > variants_indri.vcf

-----------------------------------------------------------------------
#convert bcf to vcf
bcftools view $working_dir$3/output.bcf > $working_dir$3/output.vcf
#header of vcf
#bcftools view -h output.vcf | head -200
-----------------------------------------------------------------------
#Variant file
#SNP calling
#mpileup: check each position of the reference if it contains a potential variant
#-f reference fasta
#TODO sample file for ploidy
#-Ou = output uncompressed bcf
#-f = faidx indexed fasta file available
#-Ov = output is unzipped vcf
#-o= outputfile
#-m = alternative model for multiallelic and rare-variant calling (conflicts with -c) -> PROBLEM
#-v =  output variant sites only
bcftools mpileup -Ou -f $working_dir$3/reference.fna $working_dir$3/bwa.sorted.bam | bcftools call -mv -Ov -o $working_dir$3/output.vcf

-----------------------------------------------------------------------
#IGV: ~/Downloads/IGV_Linux_2.10.0 ./igv.sh
#load fasta (fna) and index (fai) for genome and bam, bai, vcf as track

-----------------------------------------------------------------------
#histogram of chromosome length
#grep "chromosome" reference.fna
#-> first 25 lines of reference.fna.fai
#-> use histogram.py

-----------------------------------------------------------------------
#repeatmasker (save database!)
https://supcom.hgc.jp/english/utili_info/manual/RepeatMasker.html
h5py https://docs.h5py.org/en/latest/build.html
#install: https://www.repeatmasker.org/RepeatMasker/
#database https://www.dfam.org/releases/Dfam_3.2/families/Dfam.h5.gz
#search engine: RMBlast http://www.repeatmasker.org/RMBlast.html
-----------------------------------------------------------------------
#remove repeats (repeats are lower case)
for chromosome in NC*
do
tr -d [:lower:] < $chromosome > new$chromosome
done

-----------------------------------------------------------------------
#CONSENSUS BCFTOOLS https://samtools.github.io/bcftools/howtos/consensus-sequence.html
#use when made vcf with -mv 
#index vcf
bcftools index output.vcf.gz 
#normalize indels
# split multiallelic sites into multiple rows
#bcftools norm -f reference.fna output.vcf.gz -Ob -o output.norm.bcf
#bcftools filter --IndelGap 5 output.norm.bcf -Ob -o output.norm.flt-indels.bcf
cat reference.fna | bcftools consensus output.vcf.gz > consensus.fa
#when using psmc:
#The site NW_024571163.1:21951 overlaps with another variant, skipping... -> a lot
#PROBLEM consensus not diploid

-----------------------------------------------------------------------
#sort reference into chromosomes
mkdir $working_dir$3chromosomes
cd $working_dir$3chromosomes
#25 because of 25 chromosomes
head -25 ../reference.fna.fai | sudo faidx -x ../reference.fna
#get chromosomes bigger than 1MB
sudo mkdir $working_dir$3chromosomes/big
for file in *
do
words=`wc -w $file | awk '{print $1}'`
echo $words
if [ $words -gt 1000000 ]
then	
	mv $file $working_dir$3chromosomes/big/$file
fi
done
-----------------------------------------------------------------------
bcftools +fill-tags output.vcf -- -t AF > with_AF.vcf
bcftools query -f'%CHROM\t%POS\t%REF,%ALT\t%INFO/TAG\n' with_AF.vcf | bgzip -c > freqs.tab.gz

------------------------------------------------------------------------

#output: chromosome - position - state (1:Autozygous/0:HardyWeinberg) - quality
#ST = state, RG= region (when input is multiple vcf files)
#how often Hardy Weinberg:
#awk '{print $5}' roh.txt | grep "0" | wc -l
#for roh_call_mv: 6.411.728 
#for new_roh.txt: 6.525.129
#how often autozygote (homozygote):
#awk '{print $5}' roh.txt | grep "1" | wc -l
#for roh_call_mv: 1.383.983 
#for new_roh.txt: 1.230.577

#9665 times RG
#7783890 times ST

#number of heterozygose sites 
for file in $working_dir$3vcf/*
do
wc -l $file 
done
> size.txt

--------------------------------------------
csplit $working_dir$3/consensus/diploid_consensus.fq /\@$chromosome/ {*} 
